%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.05.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 3
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 2370 378
%%HiResBoundingBox: 0 0 2370 377.03998
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfOPM false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/opm { dup /pdfOPM exch def
      /setoverprintmode where{pop setoverprintmode}{pop}ifelse  } def
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
  /pdfOPM where {
    pop
    pdfOPM /setoverprintmode where{pop setoverprintmode}{pop}ifelse 
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfMask {
  /ReusableStreamDecode filter
  skipEOD
  /maskStream exch def
} def
/pdfMaskEnd { maskStream closefile } def
/pdfMaskInit {
  /maskArray exch def
  /maskIdx 0 def
} def
/pdfMaskSrc {
  maskIdx maskArray length lt {
    maskArray maskIdx get
    /maskIdx maskIdx 1 add def
  } {
    ()
  } ifelse
} def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 2370 377.03998 re
W
q
[0.24 0 0 -0.24 0 377.03998] cm
q
0 0 9875 1568.75 re
W*
q
[21.538269 0 0 21.549345 194.03235 -179.72932] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
48.811001 31.447001 m
48.790001 31.365 48.813 31.455 48.811001 31.447001 c
h
f
59.929001 37.931999 m
60.438999 37.138 61.208 35.714001 60.82 34.743 c
60.445 33.805 59.485001 33.298 58.586998 32.981998 c
54.237999 31.451998 48.961998 32.253998 44.509998 33.004997 c
47.223999 36.773998 50.886997 39.761997 54.627998 42.464996 c
55.664001 41.771 58.588001 39.951 59.929001 37.931999 c
h
f
36.799999 44.078999 m
35.047001 41.536999 33.781998 38.66 33.871998 35.528 c
28.003998 37.291 22.299999 39.618999 16.909998 42.538002 c
14.583998 43.798 12.310998 45.171001 10.174997 46.734001 c
8.170998 48.199001 6.036997 49.903999 4.782997 52.092003 c
4.362997 52.826004 3.950997 53.781002 4.371997 54.604004 c
4.903997 55.642002 6.241997 56.101006 7.291997 56.380005 c
8.467998 56.693005 9.688997 56.827003 10.900997 56.887005 c
11.764998 56.930004 14.498997 56.937004 14.498997 56.937004 c
14.498997 56.937004 14.681996 56.763004 14.957996 56.580006 c
19.102997 53.817005 23.620996 51.497005 28.258995 49.678005 c
31.580996 48.375004 34.963997 47.229004 38.373993 46.180004 c
37.811001 45.505001 37.300999 44.799 36.799999 44.078999 c
h
f
91.598 41.032001 m
87.899002 36.979 83.432999 33.673 78.763 30.810001 c
73.660004 27.683001 68.056 24.996002 62.328003 23.237001 c
57.456001 21.741001 51.840004 20.503002 46.763004 21.630001 c
44.833004 22.058001 42.685005 23.003 42.017006 25.032001 c
41.662006 26.111002 41.771008 27.303001 42.080006 28.380001 c
42.220005 28.868002 42.399006 29.342001 42.607006 29.805 c
42.848007 30.341 42.969006 31.042 43.608006 30.984001 c
47.356007 30.641001 51.037006 29.999001 54.821007 30.217001 c
58.110008 30.410002 61.669006 31.210001 63.735008 34.007 c
64.035011 34.412998 64.31501 34.824001 64.583008 35.251999 c
64.702011 35.440998 64.812004 35.636997 64.919006 35.834 c
65.106003 36.174 66.210007 36.533001 66.590004 36.716999 c
69.169006 37.962997 71.704002 39.233997 74.153008 40.737 c
78.716011 43.539001 83.07901 46.799 86.629005 50.836998 c
87.289009 51.586998 87.926003 52.355 88.497009 53.174999 c
88.73201 53.488998 88.937012 53.833 89.141006 54.168999 c
89.372009 54.552998 89.333008 54.779999 89.82901 54.716 c
90.164009 54.672001 90.498009 54.617001 90.82901 54.549999 c
92.609009 54.190998 94.613007 53.423 95.492012 51.708 c
96.359009 50.013 95.756012 47.835999 95.033012 46.208 c
94.178001 44.278 92.903999 42.659 91.598 41.032001 c
h
f
97.390999 50.929001 m
97.483002 50.791 97.386002 50.336002 97.369995 50.132999 c
97.317993 49.412998 97.225998 48.704998 97.042992 48.006001 c
97.042992 46.649002 95.971992 44.993999 95.298988 43.860001 c
93.596985 40.993999 91.097992 38.601002 88.582985 36.455002 c
84.173988 32.691002 79.293983 29.678001 74.197983 26.953003 c
74.418983 27.063004 74.637985 27.173002 74.858986 27.284002 c
67.397987 23.500002 59.254986 20.447002 50.821983 19.967003 c
48.768982 19.850002 46.616982 19.904003 44.652985 20.576002 c
43.447983 20.989002 42.505985 21.717003 41.538986 22.512003 c
38.969986 24.452003 37.116985 27.661003 35.988987 30.601002 c
35.748985 31.225002 35.537987 31.863001 35.364986 32.509003 c
35.206985 33.096004 35.235985 34.029003 34.641987 34.203003 c
32.202988 34.919003 29.836987 35.726002 27.458986 36.605003 c
23.019985 38.246002 18.662987 40.175003 14.544987 42.514004 c
12.646987 43.592003 10.800987 44.762005 9.052986 46.071003 c
6.899986 47.683002 4.655986 49.555004 3.393986 51.980003 c
2.149986 54.372002 2.504986 57.158005 3.210986 59.660004 c
3.866986 61.987003 4.871986 63.973003 6.106986 66.031006 c
8.005986 68.601006 11.053986 69.432007 14.134986 69.628006 c
22.026985 70.129005 30.107986 68.129005 37.565987 65.717003 c
39.807987 64.977005 42.030987 64.195 44.220985 63.310001 c
46.030987 62.580002 47.957985 61.913002 49.654984 60.944 c
53.293983 59.223 56.977982 57.283001 60.166985 54.803001 c
61.679985 53.744003 63.412983 52.250999 64.634987 50.695 c
65.169991 50.014 66.294991 48.693001 66.294991 47.767998 c
66.616989 47.284996 66.61499 46.337997 66.64299 45.779999 c
66.72699 43.693001 66.21299 41.663998 65.537987 39.705997 c
65.252983 38.876999 64.872986 37.986996 64.477989 37.142998 c
64.190987 36.557999 63.874989 35.983997 63.521988 35.436996 c
63.448986 35.319996 62.929989 34.744995 62.929989 34.598995 c
60.325989 31.270996 55.65699 31.066996 51.76799 31.187996 c
49.366989 31.262997 46.965988 31.532995 44.596989 31.922997 c
44.01899 32.017998 42.928989 32.471996 42.61499 31.944996 c
42.280991 31.381996 41.963989 30.812996 41.695992 30.214996 c
41.263992 29.251997 40.94199 28.236996 40.834991 27.183996 c
40.51099 23.986996 42.639992 21.809996 45.549992 20.913996 c
49.894993 19.575996 54.84399 20.328997 59.168991 21.348995 c
64.943993 22.709995 70.440994 25.110996 75.662994 27.898994 c
80.939995 30.714994 86.018997 34.141994 90.344994 38.292995 c
93.519997 41.339996 97.567993 46.005997 96.811996 50.819996 c
95.995995 56.017998 88.732994 56.028996 84.82 55.657997 c
78.923996 55.098999 72.805 53.503998 67.479996 50.899998 c
67.043999 50.686996 66.612 50.467999 66.180992 50.245998 c
66.094994 50.372997 66.007996 50.498997 65.919991 50.625999 c
65.640991 51.029999 65.347992 51.420998 65.025993 51.792999 c
63.912994 53.082001 62.602993 54.230999 61.237991 55.245998 c
59.569992 56.486 57.85899 57.634998 56.068993 58.692997 c
63.654991 62.868996 72.181992 66.122993 80.92099 66.563995 c
84.155991 66.726997 87.707993 66.335999 90.411987 64.400993 c
92.290985 63.055992 93.654984 61.116993 94.794991 59.134995 c
94.737991 59.238995 94.833992 59.060993 94.752991 59.203995 c
95.521988 57.873993 96.25499 56.226994 96.661987 54.923996 c
97.065002 53.637001 97.390999 52.242001 97.390999 50.929001 c
h
65.968002 41.085999 m
65.983002 41.137997 65.998001 41.189999 66.013 41.240997 c
65.982002 41.192001 65.968002 41.139999 65.968002 41.085999 c
h
65.852997 40.695 m
65.754997 40.377998 65.902 40.827999 65.852997 40.695 c
65.842003 40.66 65.855003 40.702999 65.852997 40.695 c
h
65.830002 40.615002 m
65.816002 40.576 65.804001 40.536003 65.792999 40.497002 c
65.806 40.535999 65.817001 40.575001 65.830002 40.615002 c
65.819 40.582001 65.819 40.577999 65.830002 40.615002 c
h
43.875999 32.096001 m
46.783001 31.585001 49.735001 31.227001 52.689999 31.221001 c
55.225998 31.216002 58.252998 31.321001 60.435997 32.776001 c
62.668999 34.409 61.883995 36.962002 60.470997 38.900002 c
58.737995 41.166 56.314995 42.537003 53.981998 44.101002 c
51.855 45.526001 49.787998 47.071003 47.510998 48.245003 c
45.001999 49.474003 42.461998 50.649002 39.812996 51.542004 c
35.476997 53.005005 31.062996 54.250004 26.671997 55.534004 c
23.894997 56.347004 21.198997 57.079002 18.327997 57.477005 c
15.520997 57.866005 12.652997 58.072006 9.823998 57.815006 c
7.771998 57.628006 4.978997 57.235004 3.691998 55.408005 c
2.346998 53.499004 4.030998 51.153004 5.299997 49.714005 c
8.738997 45.813004 13.616998 43.072006 18.194998 40.735004 c
23.568998 37.991005 29.200996 35.818005 35.001999 34.160004 c
34.118999 40.059006 38.34 45.083004 42.323997 48.907005 c
42.817997 49.381004 42.854996 49.300007 43.484997 49.024006 c
43.979996 48.807007 44.467999 48.577007 44.956997 48.346004 c
45.351997 48.160004 45.746998 47.975006 46.141998 47.790005 c
47.121998 47.331005 48.105 46.866005 49.001999 46.258003 c
50.580997 45.187004 52.161999 44.119003 53.745998 43.055004 c
49.644997 40.059006 45.495998 36.683002 42.823997 32.291004 c
43.174 32.224998 43.523998 32.157001 43.875999 32.096001 c
44.647999 31.959999 43.528 32.157001 43.875999 32.096001 c
h
f
59.570999 21.323 m
59.561001 21.452 59.575001 21.323999 59.570999 21.323 c
59.570999 21.323 59.573002 21.323999 59.570999 21.323 c
h
f
Q
q
[24.9368 0 0 24.949623 9600.6816 498.99243] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
-273 0 3 24 re
f
Q
q
[10.334679 0 0 10.339994 3213.2744 522.12866] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
2.76 37.360001 m
2.76 15.120001 l
2.76 13.560001 3.56 12.360001 5.28 12.360001 c
7 12.360001 7.8 13.56 7.8 15.120001 c
7.8 20.640001 l
8.96 20.800001 10.12 20.920002 11.28 21.080002 c
13.599999 20.160002 16.279999 18.040001 17 14.800001 c
17.360001 13.160001 18.16 12.360001 19.639999 12.360001 c
21.039999 12.360001 22.039999 13.400001 22.039999 14.960001 c
22.039999 17.68 18.759998 22 15.879999 23.040001 c
20.84 25.640001 23.719999 31.800001 23.719999 36.959999 c
23.719999 38.799999 23 40.119999 21.199999 40.119999 c
19.439999 40.119999 18.799999 38.879997 18.679998 37.040001 c
18.199999 29.800001 14.359999 25.32 7.799998 24.960001 c
7.799998 37.360001 l
7.799998 38.920002 6.999998 40.119999 5.279998 40.119999 c
3.559999 40.119999 2.759998 38.919998 2.759998 37.360001 c
2.76 37.360001 l
h
34.353001 28.32 m
33.313 28.32 l
32.232998 31.24 31.632999 35.080002 31.353001 37.759998 c
31.193001 39.239998 30.353001 40.119999 28.913 40.119999 c
26.753 40.119999 26.313 38.84 26.313 36.919998 c
26.313 35.679996 26.993 28.48 32.233002 18.599998 c
34.513 14.279999 35.793003 12.239998 38.593002 12.239998 c
40.913002 12.239998 42.273003 14.279998 44.553001 18.599998 c
49.792999 28.48 50.873001 35.68 50.873001 36.919998 c
50.873001 39 49.873001 40.119999 48.473 40.119999 c
46.473 40.119999 45.993 38.959999 45.592999 36.799999 c
44.552998 31.039999 38.833 28.32 34.352997 28.32 c
34.353001 28.32 l
h
34.513 24.32 m
35.033001 24.32 l
36.993 24.32 40.433002 24.879999 43.073002 27.039999 c
43.153004 26.959999 l
41.953003 23.519999 40.433002 20.16 38.473003 17.039999 c
36.873005 19.439999 35.553001 21.84 34.513004 24.32 c
34.513 24.32 l
h
67.225998 22.440001 m
68.865997 20.440001 69.825996 17.880001 71.185997 14.56 c
71.825996 13 72.785995 12.360001 74.385994 12.360001 c
77.465996 12.360001 77.585991 14.720001 78.225998 18.560001 c
78.986 23.080002 79.666 30.920002 79.666 35.480003 c
79.666 38.280003 79.466003 40.120003 77.185997 40.120003 c
74.945999 40.120003 74.625999 38.600002 74.625999 36.720001 c
74.625999 30.400002 l
74.625999 26.920002 74.225998 23.320002 73.666 19.640001 c
73.585999 19.640001 l
72.945999 21.68 70.026001 28.360001 67.225998 28.360001 c
64.425995 28.360001 61.505997 21.68 60.865997 19.639999 c
60.785995 19.639999 l
60.225994 23.32 59.825996 26.92 59.825996 30.4 c
59.825996 36.720001 l
59.825996 38.600002 59.505997 40.120003 57.265995 40.120003 c
54.985996 40.120003 54.785995 38.280003 54.785995 35.480003 c
54.785995 30.920004 55.465996 23.080004 56.225994 18.560003 c
56.865993 14.720003 56.985992 12.360004 60.065994 12.360004 c
61.665993 12.360004 62.625996 13.000004 63.265995 14.560003 c
64.625992 17.880003 65.585999 20.440002 67.225998 22.440002 c
67.225998 22.440001 l
h
91.579002 28.32 m
90.539001 28.32 l
89.459 31.24 88.859001 35.080002 88.579002 37.759998 c
88.418999 39.239998 87.579002 40.119999 86.139 40.119999 c
83.978996 40.119999 83.539001 38.84 83.539001 36.919998 c
83.539001 35.679996 84.219002 28.48 89.459 18.599998 c
91.738998 14.279999 93.018997 12.239998 95.819 12.239998 c
98.139 12.239998 99.499001 14.279998 101.778999 18.599998 c
107.018997 28.48 108.098999 35.68 108.098999 36.919998 c
108.098999 39 107.098999 40.119999 105.698997 40.119999 c
103.698997 40.119999 103.218994 38.959999 102.819 36.799999 c
101.778999 31.039999 96.058998 28.32 91.579002 28.32 c
h
91.738998 24.32 m
92.258995 24.32 l
94.218994 24.32 97.658997 24.879999 100.298996 27.039999 c
100.378998 26.959999 l
99.179001 23.519999 97.658997 20.16 95.698997 17.039999 c
94.098999 19.439999 92.778999 21.84 91.738998 24.32 c
h
112.891998 36.560001 m
112.891998 15.080002 l
112.891998 13.560001 113.731995 12.360002 115.411995 12.360002 c
117.091995 12.360002 117.931992 13.560001 117.931992 15.080002 c
117.931992 35.200005 l
125.651993 35.200005 l
127.091995 35.200005 128.251999 35.960003 128.251999 37.600006 c
128.251999 39.240009 127.091995 40.000008 125.652 40.000008 c
116.372002 40.000008 l
113.732002 40.000008 112.891998 38.640007 112.891998 36.560009 c
112.891998 36.560001 l
h
162.278 17.280001 m
154.837997 17.280001 l
150.51799 17.280001 149.037994 20.040001 149.037994 24.16 c
149.037994 29.279999 153.477997 35.200001 161.917999 35.200001 c
164.197998 35.200001 165.158005 36.240002 165.158005 37.600002 c
165.158005 39.520004 163.678009 40.240002 160.917999 40.240002 c
153.078003 40.240002 143.358002 34.960003 143.358002 23.840002 c
143.358002 16.960003 147.638 12.480002 153.397995 12.480002 c
162.278 12.480002 l
163.718002 12.480002 164.878006 13.240003 164.878006 14.880003 c
164.878006 16.520004 163.718002 17.280003 162.278 17.280003 c
162.278 17.280001 l
h
174.47099 20.879999 m
183.75099 20.879999 l
183.75099 15.079999 l
183.75099 13.56 184.55099 12.359999 186.271 12.359999 c
187.991 12.359999 188.791 13.559999 188.791 15.079999 c
188.791 37.399998 l
188.791 38.919998 187.991 40.119999 186.271 40.119999 c
184.55099 40.119999 183.75099 38.919998 183.75099 37.399998 c
183.75099 25.199997 l
174.47099 25.199997 l
174.47099 37.399998 l
174.47099 38.919998 173.67099 40.119999 171.95099 40.119999 c
170.23099 40.119999 169.43098 38.919998 169.43098 37.399998 c
169.43098 15.079998 l
169.43098 13.559998 170.23099 12.359998 171.95099 12.359998 c
173.67099 12.359998 174.47099 13.559998 174.47099 15.079998 c
174.47099 20.879997 l
174.47099 20.879999 l
h
201.26401 28.32 m
200.22401 28.32 l
199.14401 31.24 198.54402 35.080002 198.26401 37.759998 c
198.104 39.239998 197.26401 40.119999 195.82401 40.119999 c
193.664 40.119999 193.224 38.84 193.224 36.919998 c
193.224 35.679996 193.90399 28.48 199.144 18.599998 c
201.424 14.279999 202.70399 12.239998 205.504 12.239998 c
207.82401 12.239998 209.18399 14.279998 211.464 18.599998 c
216.70401 28.48 217.78401 35.68 217.78401 36.919998 c
217.78401 39 216.78401 40.119999 215.38402 40.119999 c
213.38402 40.119999 212.90402 38.959999 212.50401 36.799999 c
211.46402 31.039999 205.74402 28.32 201.26401 28.32 c
h
201.424 24.32 m
201.944 24.32 l
203.90401 24.32 207.34399 24.879999 209.98399 27.039999 c
210.064 26.959999 l
208.864 23.519999 207.34399 20.16 205.384 17.039999 c
203.784 19.439999 202.464 21.84 201.424 24.32 c
h
241.577 15.12 m
241.577 37.360001 l
241.577 38.920002 240.77699 40.119999 239.05699 40.119999 c
237.33699 40.119999 236.53699 38.919998 236.53699 37.360001 c
236.53699 24.68 l
233.25699 24.32 229.89699 22.040001 227.25699 18.960001 c
227.25699 37.360001 l
227.25699 38.920002 226.45699 40.119999 224.73698 40.119999 c
223.01698 40.119999 222.21698 38.919998 222.21698 37.360001 c
222.21698 15.120001 l
222.29698 13.560001 223.25697 12.360001 225.45699 12.360001 c
229.37698 12.360001 229.81699 18.240002 236.53699 20.120001 c
236.53699 15.120001 l
236.53699 13.560001 237.33699 12.360001 239.05699 12.360001 c
240.77699 12.360001 241.577 13.56 241.577 15.120001 c
241.577 15.12 l
h
247.61 37.040001 m
247.61 15.6 l
247.61 13.6 248.57001 12.480001 251.09 12.480001 c
266.01001 12.480001 270.20999 22.400002 270.20999 28.52 c
270.20999 34.560001 266.32999 40 259.53 40 c
251.17 40 l
248.56999 40 247.61 39.360001 247.61 37.040001 c
h
252.64999 17.280001 m
252.64999 35.200001 l
256.53 35.200001 l
262.48999 35.200001 264.53 33.200001 264.53 28.880001 c
264.53 22.400002 259.20999 17.280001 252.64999 17.280001 c
h
280.043 25.16 m
280.043 37.439999 l
280.043 38.919998 279.24301 40.119999 277.52301 40.119999 c
275.80301 40.119999 275.00302 38.919998 275.00302 37.439999 c
275.00302 15.159998 l
275.00302 13.679998 275.80301 12.479998 277.52301 12.479998 c
286.08301 12.479998 l
292.16299 12.479998 294.483 14.239998 294.483 18.159998 c
294.483 20.879997 292.96301 23.039997 290.84299 24.439999 c
294.28299 27.559998 296.12299 32.68 296.12299 36.519997 c
296.12299 38.359997 295.763 40.119995 293.763 40.119995 c
291.56299 40.119995 291.12299 38.639996 291.08301 36.759995 c
290.96301 30.719994 287.68301 25.159994 280.043 25.159994 c
280.043 25.16 l
h
280.043 17.040001 m
280.043 20.84 l
282.24301 20.84 283.28299 21.08 284.28299 21.280001 c
286.72299 21.92 l
287.80298 21.92 289.44299 20.120001 289.44299 18.92 c
289.44299 17.639999 288.44299 17.040001 286.72299 17.040001 c
280.043 17.040001 l
h
306.836 28.32 m
305.79599 28.32 l
304.716 31.24 304.116 35.080002 303.836 37.759998 c
303.67599 39.239998 302.836 40.119999 301.396 40.119999 c
299.23599 40.119999 298.79599 38.84 298.79599 36.919998 c
298.79599 35.679996 299.47598 28.48 304.716 18.599998 c
306.996 14.279999 308.276 12.239998 311.07599 12.239998 c
313.396 12.239998 314.75598 14.279998 317.03598 18.599998 c
322.27597 28.48 323.35599 35.68 323.35599 36.919998 c
323.35599 39 322.35599 40.119999 320.95599 40.119999 c
318.95599 40.119999 318.47598 38.959999 318.07599 36.799999 c
317.03598 31.039999 311.31598 28.32 306.836 28.32 c
h
306.996 24.32 m
307.51599 24.32 l
309.47598 24.32 312.91599 24.879999 315.556 27.039999 c
315.63599 26.959999 l
314.43597 23.519999 312.91599 20.16 310.95599 17.039999 c
309.35599 19.439999 308.03598 21.84 306.996 24.32 c
h
328.02899 37.360001 m
328.02899 15.120001 l
328.02899 13.560001 328.82898 12.360001 330.54898 12.360001 c
332.26898 12.360001 333.06897 13.56 333.06897 15.120001 c
333.06897 20.640001 l
334.22897 20.800001 335.38898 20.920002 336.54898 21.080002 c
338.86899 20.160002 341.54898 18.040001 342.26898 14.800001 c
342.62897 13.160001 343.42899 12.360001 344.909 12.360001 c
346.30899 12.360001 347.30899 13.400001 347.30899 14.960001 c
347.30899 17.68 344.02899 22 341.14899 23.040001 c
346.10898 25.640001 348.98898 31.800001 348.98898 36.959999 c
348.98898 38.799999 348.26898 40.119999 346.46899 40.119999 c
344.70898 40.119999 344.069 38.879997 343.94901 37.040001 c
343.46899 29.800001 339.629 25.32 333.069 24.960001 c
333.069 37.360001 l
333.069 38.920002 332.26901 40.119999 330.54901 40.119999 c
328.82901 40.119999 328.02902 38.919998 328.02902 37.360001 c
328.02899 37.360001 l
h
359.62201 28.32 m
358.582 28.32 l
357.50201 31.24 356.90201 35.080002 356.62201 37.759998 c
356.46201 39.239998 355.62201 40.119999 354.18201 40.119999 c
352.022 40.119999 351.582 38.84 351.582 36.919998 c
351.582 35.679996 352.26199 28.48 357.50201 18.599998 c
359.78201 14.279999 361.06201 12.239998 363.862 12.239998 c
366.18201 12.239998 367.54199 14.279998 369.82199 18.599998 c
375.06198 28.48 376.142 35.68 376.142 36.919998 c
376.142 39 375.142 40.119999 373.742 40.119999 c
371.742 40.119999 371.26199 38.959999 370.862 36.799999 c
369.82199 31.039999 364.10199 28.32 359.62201 28.32 c
h
359.78201 24.32 m
360.302 24.32 l
362.26199 24.32 365.702 24.879999 368.34201 27.039999 c
368.422 26.959999 l
367.22198 23.519999 365.702 20.16 363.742 17.039999 c
362.142 19.439999 360.82199 21.84 359.78201 24.32 c
h
399.935 15.12 m
399.935 37.360001 l
399.935 38.920002 399.13501 40.119999 397.41501 40.119999 c
395.69501 40.119999 394.89502 38.919998 394.89502 37.360001 c
394.89502 24.68 l
391.61502 24.32 388.255 22.040001 385.61502 18.960001 c
385.61502 37.360001 l
385.61502 38.920002 384.81503 40.119999 383.09503 40.119999 c
381.37503 40.119999 380.57504 38.919998 380.57504 37.360001 c
380.57504 15.120001 l
380.65503 13.560001 381.61505 12.360001 383.81503 12.360001 c
387.73505 12.360001 388.17502 18.240002 394.89502 20.120001 c
394.89502 15.120001 l
394.89502 13.560001 395.69501 12.360001 397.41501 12.360001 c
399.13501 12.360001 399.935 13.56 399.935 15.120001 c
399.935 15.12 l
h
415.84799 17.280001 m
415.84799 37.400002 l
415.84799 38.920002 415.048 40.120003 413.328 40.120003 c
411.608 40.120003 410.80801 38.920002 410.80801 37.400002 c
410.80801 17.280001 l
406.168 17.280001 l
404.728 17.280001 403.56799 16.52 403.56799 14.880001 c
403.56799 13.240002 404.728 12.480001 406.168 12.480001 c
420.48801 12.480001 l
421.92801 12.480001 423.08801 13.240002 423.08801 14.880001 c
423.08801 16.52 421.92801 17.280001 420.48801 17.280001 c
415.84799 17.280001 l
h
457.83401 17.280001 m
450.39401 17.280001 l
446.07401 17.280001 444.59402 20.040001 444.59402 24.16 c
444.59402 29.279999 449.03403 35.200001 457.47403 35.200001 c
459.75403 35.200001 460.71402 36.240002 460.71402 37.600002 c
460.71402 39.520004 459.23401 40.240002 456.47403 40.240002 c
448.63403 40.240002 438.91403 34.960003 438.91403 23.840002 c
438.91403 16.960003 443.19403 12.480002 448.95404 12.480002 c
457.83405 12.480002 l
459.27405 12.480002 460.43405 13.240003 460.43405 14.880003 c
460.43405 16.520004 459.27405 17.280003 457.83405 17.280003 c
457.83401 17.280001 l
h
470.02701 20.879999 m
479.30701 20.879999 l
479.30701 15.079999 l
479.30701 13.56 480.10699 12.359999 481.827 12.359999 c
483.547 12.359999 484.34698 13.559999 484.34698 15.079999 c
484.34698 37.399998 l
484.34698 38.919998 483.547 40.119999 481.827 40.119999 c
480.10699 40.119999 479.30701 38.919998 479.30701 37.399998 c
479.30701 25.199997 l
470.02701 25.199997 l
470.02701 37.399998 l
470.02701 38.919998 469.22702 40.119999 467.50702 40.119999 c
465.78702 40.119999 464.98703 38.919998 464.98703 37.399998 c
464.98703 15.079998 l
464.98703 13.559998 465.78702 12.359998 467.50702 12.359998 c
469.22702 12.359998 470.02701 13.559998 470.02701 15.079998 c
470.02701 20.879997 l
470.02701 20.879999 l
h
515.17999 26.24 m
515.17999 35.200001 509.01999 40.239998 502.17999 40.239998 c
495.34 40.239998 489.17999 35.199997 489.17999 26.239998 c
489.17999 17.279999 495.34 12.239998 502.17999 12.239998 c
509.01999 12.239998 515.17999 17.279999 515.17999 26.239998 c
515.17999 26.24 l
h
509.5 26.24 m
509.5 20.959999 506.54001 16.799999 502.17999 16.799999 c
497.81998 16.799999 494.85999 20.959999 494.85999 26.239998 c
494.85999 31.519997 497.81998 35.679996 502.17999 35.679996 c
506.54001 35.679996 509.5 31.519997 509.5 26.239998 c
509.5 26.24 l
h
520.21301 37.360001 m
520.21301 15.120001 l
520.21301 13.560001 521.013 12.360001 522.73303 12.360001 c
524.45306 12.360001 525.25305 13.56 525.25305 15.120001 c
525.25305 20.640001 l
526.41302 20.800001 527.57306 20.920002 528.73303 21.080002 c
531.05304 20.160002 533.73303 18.040001 534.453 14.800001 c
534.81299 13.160001 535.61298 12.360001 537.09302 12.360001 c
538.49304 12.360001 539.49304 13.400001 539.49304 14.960001 c
539.49304 17.68 536.21301 22 533.33307 23.040001 c
538.29309 25.640001 541.1731 31.800001 541.1731 36.959999 c
541.1731 38.799999 540.45313 40.119999 538.65308 40.119999 c
536.89307 40.119999 536.25305 38.879997 536.13306 37.040001 c
535.65308 29.800001 531.81305 25.32 525.25305 24.960001 c
525.25305 37.360001 l
525.25305 38.920002 524.45306 40.119999 522.73303 40.119999 c
521.013 40.119999 520.21301 38.919998 520.21301 37.360001 c
h
560.68597 17.280001 m
551.44598 17.280001 l
550.20599 17.280001 549.526 17.84 549.526 18.880001 c
549.526 22.52 565.646 19.160002 565.646 30.32 c
565.646 35.360001 561.84601 40 555.00598 40 c
546.40601 40 l
544.966 40 543.80603 39.240002 543.80603 37.599998 c
543.80603 35.959995 544.966 35.199997 546.40601 35.199997 c
552.966 35.199997 l
558.16602 35.199997 560.36603 33.919998 560.36603 30.519997 c
560.36603 23.199997 544.24603 29.039997 544.24603 18.959995 c
544.24603 14.799995 547.40601 12.479996 552.40601 12.479996 c
560.68604 12.479996 l
562.12604 12.479996 563.28601 13.239996 563.28601 14.879995 c
563.28601 16.519995 562.12604 17.279995 560.68604 17.279995 c
560.68597 17.280001 l
h
576.07898 15.08 m
576.07898 37.400002 l
576.07898 38.920002 575.27899 40.120003 573.55896 40.120003 c
571.83893 40.120003 571.03894 38.920002 571.03894 37.400002 c
571.03894 15.080002 l
571.03894 13.560001 571.83893 12.360002 573.55896 12.360002 c
575.27899 12.360002 576.07898 13.560001 576.07898 15.080002 c
576.07898 15.08 l
h
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
